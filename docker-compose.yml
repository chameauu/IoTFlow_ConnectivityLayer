version: "3.8"

services:
  postgres:
    image: postgres:15
    container_name: iotflow_postgress
    environment:
      POSTGRES_DB: iotflow_db
      POSTGRES_USER: iotflow_user
      POSTGRES_PASSWORD: iotflow_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database_setup.sql:/docker-entrypoint-initdb.d/01-setup.sql
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U iotflow_user -d iotflow_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: iotflow_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MQTT Broker - Eclipse Mosquitto
  mosquitto:
    image: eclipse-mosquitto:2.0
    container_name: iotflow_mosquitto
    ports:
      - "1883:1883"    # MQTT port
      - "9001:9001"    # WebSocket port
      - "8883:8883"    # MQTT SSL port
    volumes:
      - ./mqtt/config:/mosquitto/config
      - ./mqtt/data:/mosquitto/data
      - ./mqtt/logs:/mosquitto/log
      - mosquitto_data:/mosquitto/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "mosquitto_pub -h localhost -t test -m 'health check' || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Optional: pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: iotflow_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@iotflow.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGLADMIN_LISTEN_PORT: 80
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    restart: unless-stopped

  # InfluxDB 2.0 for time-series data storage
  influxdb:
    image: influxdb:2.7
    container_name: iotflow_influxdb
    ports:
      - "8086:8086"
    volumes:
      - influxdb_data:/var/lib/influxdb2
      - influxdb_config:/etc/influxdb2
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=iotflow_admin
      - DOCKER_INFLUXDB_INIT_PASSWORD=iotflow_influx_password
      - DOCKER_INFLUXDB_INIT_ORG=iotflow
      - DOCKER_INFLUXDB_INIT_BUCKET=telemetry
      - DOCKER_INFLUXDB_INIT_RETENTION=30d
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=iotflow-super-secret-admin-token
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8086/ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Grafana for data visualization
  grafana:
    image: grafana/grafana:10.0.0
    container_name: iotflow_grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=iotflow_grafana_password
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
    restart: unless-stopped
    depends_on:
      - influxdb
    healthcheck:
      test: ["CMD-SHELL", "curl -f localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local
  mosquitto_data:
    driver: local
  influxdb_data:
    driver: local
  influxdb_config:
    driver: local
  grafana_data:
    driver: local
